version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
jobs:
  build:
    docker:
      - image: circleci/python:3.7
      - image: circleci/redis:latest
      - image: circleci/postgres:9.6.2-alpine
      - image: cimg/node:12.20.1
        
        auth:
          username: wgarlock
          password: $DOCKERHUB_PASSWORD 
        environment:
          POSTGRES_USER: testuser
          POSTGRES_DB: test12345
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            ls -all
            cd wheels
            ls -all
            cd ..
            cat requirements.txt
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Running tests
          command: |
            . venv/bin/activate
            flake8
            isort ./cabins-app --check --diff
            coverage run -m pytest --pyargs cabins_test
            coverage xml -i

      - run:
          name: Fail Fast
          when: on_fail
          command: |
            echo "Canceling workflow as a step resulted in failure"
            curl -X POST --header "Content-Type: application/json" "https://circleci.com/api/v2/workflow/${CIRCLE_WORKFLOW_ID}/cancel?circle-token=${CIRCLE_TOKEN}"
    
      - codecov/upload:
          file: ./coverage.xml
  
      - run:
          name: Build Docker image
          command: |
            docker build -t cabins-app:latest .
            docker tag cabins-app:latest wgarlock/cabins-app:latest
            docker tag cabins-app:latest wgarlock/cabins-app:v0.0.17
            echo "$DOCKERHUB_PASSWORD" | docker login -u "wgarlock" --password-stdin
            docker push wgarlock/cabins-app:latest
            docker push wgarlock/cabins-app:v0.0.17

      - run:
          name: Install Deployment Requirements
          command: |
            sudo apt install curl
            curl -LO https://get.helm.sh/helm-v3.4.2-linux-amd64.tar.gz
            tar -C /tmp/ -zxvf helm-v3.4.2-linux-amd64.tar.gz
            sudo mv /tmp/linux-amd64/helm /usr/local/bin/helm
            sudo rm helm-v3.4.2-linux-amd64.tar.gz
            helm version


            curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod u+x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl


            curl -LO https://github.com/digitalocean/doctl/releases/download/v1.54.0/doctl-1.54.0-linux-amd64.tar.gz
            tar -C /tmp/ -zxvf doctl-1.54.0-linux-amd64.tar.gz
            sudo mv /tmp/doctl /usr/local/bin/doctl
            sudo rm doctl-1.54.0-linux-amd64.tar.gz
            doctl version

      - run:
          name: Build and Deploy Versioned Static Content
          command: |
            cd ./cabins-app
            npm i
            npm run build
            cd ../
            python manage.py collectstatic

      - run:
          name: Deploy Code to Kubernetes
          command: |
            doctl auth init --access-token=$DO_TOKEN
            doctl kubernetes cluster kubeconfig save cabins
            cd helm
            helm upgrade cabins-app cabins-app
            cd ..

      - run:
          name: Install K6 performance test
          command: |
            curl -LO https://github.com/loadimpact/k6/releases/download/v0.29.0/k6-v0.29.0-linux64.tar.gz
            tar -C /tmp/ -zxvf k6-v0.29.0-linux64.tar.gz
            sudo mv /tmp/k6-v0.29.0-linux64/k6 /usr/local/bin/k6
            sudo rm k6-v0.29.0-linux64.tar.gz
            k6 version
               
      - run:
          name: Run Staging Tests
          command: |
            k6 login cloud --token $K6_TOKEN
            cd .k6 && k6 run --out cloud quick_test.js
            cd ..


  
  
  
  
  
  
  
  
  
  
  